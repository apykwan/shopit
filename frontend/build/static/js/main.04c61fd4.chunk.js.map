{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/route/ProtectedRoute.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReview.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","useState","keyword","setKeyword","history","useHistory","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","aria-hidden","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","filter","item","userId","_id","to","src","alt","style","textDecoration","length","data-toggle","aria-haspopup","aria-expanded","avatar","url","name","aria-labelledby","role","onClick","success","Footer","MetaData","title","Helmet","Product","product","col","images","width","ratings","numOfReviews","price","Loader","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCTS_BRIEF_REQUEST","PRODUCTS_BRIEF_SUCCESS","PRODUCTS_BRIEF_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","productId","reviews","Range","createSliderWithTooltip","Slider","Home","match","error","productsCount","resPerPage","filteredProductsCount","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","params","useEffect","link","getProducts","count","marks","1","1000","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","bind","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","EMPTY_CART","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","emptyCart","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","data-target","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","data-dismiss","aria-label","reviewData","formData","FormData","set","config","headers","put","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","reducer","combineReducers","action","isDeleted","isUpdated","productsBrief","newProduct","productReviews","isAuthenticated","userDetails","forgotPassword","isItemExist","find","i","shippingInfo","updateCartItems","newOrder","oading","order","myOrders","orders","allOrders","totalAmount","orderDetails","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ProtectedRoute","isAdmin","Component","component","rest","render","props","Cart","removeCartItemHandler","removeItemFromCart","increaseQty","newQty","decreaseQty","classNameName","height","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","replace","sessionStorage","createOrder","post","getOrderDetails","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","orderItems","orderInfo","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","shippingDetails","isPaid","isDelievered","PhoneNo","Login","location","setEmail","password","setPassword","redirect","search","split","console","log","login","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","encType","userData","accept","Profile","createdAt","UpdateProfile","setName","UpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","ForgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","outOfStock","ProductsList","deleteError","deleteProductHandler","delete","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","productData","append","multiple","Array","from","file","oldArray","img","UpdateProduct","oldImages","setOldImages","updateError","updateProduct","OrdersList","deleteOrderHandler","orderId","numofItems","ProcessOrder","setStatus","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","ProductReview","setProductId","deleteReviewHandler","deleteReview","setReviews","App","stripeApiKey","setStripeApiKey","getStripeApiKey","path","exact","loadStripe","ProductList","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.04c61fd4.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL';\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST';\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS';\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET';\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL';\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST';\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET';\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST';\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS';\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL';\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST';\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS';\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\n\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants';\r\n\r\n// Login \r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// REGISTER\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Update profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Update password\r\nexport const updatePassword = passwords => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Forgot password\r\nexport const forgotPassword = email => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config);\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/me');\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_PASSWORD_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config);\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST });\r\n\r\n        await axios.get('/api/v1/logout');\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get all users\r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_USERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users');\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Update user (Admin)\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_USER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Delete user details (Admin)\r\nexport const deleteUser = id => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_USER_REQUEST });\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get user details (Admin)\r\nexport const getUserDetails = id => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n};","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Search = () => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const searchHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={searchHandler}>\r\n                <div className=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"search_field\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Product Name ...\"\r\n                            onChange={e => setKeyword(e.target.value)}\r\n                        />\r\n                    <div className=\"input-group-append\">\r\n                        <button id=\"search_btn\" className=\"btn\">\r\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { logout } from '../../actions/userActions';\r\nimport Search from './Search';\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user = {}, loading } = useSelector(state => state.auth);\r\n\r\n    // only get the items that belong to the logged user\r\n    let { cartItems } = useSelector(state => state.cart);\r\n    if (user) cartItems = cartItems.filter(item => item.userId === user._id);\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/shopit_logo.png\" alt=\"shopit_logo\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Search />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">  \r\n                    { user && (\r\n                        <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\r\n                            <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                            <span className=\"ml-2\" id=\"cart_count\">{cartItems.length}</span>\r\n                        </Link>\r\n                    )}\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link \r\n                                to=\"#!\" \r\n                                className=\"btn dropdown-toggle text-white mr-4\" \r\n                                type=\"button\" \r\n                                id=\"dropDownMenuButton\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img \r\n                                        src={user.avatar && user.avatar.url} \r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\" \r\n                                    />\r\n                                </figure>\r\n                                {user && user.name}\r\n                            </Link>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link \r\n                                    className=\"dropdown-item text-danger\" \r\n                                    to=\"/\"\r\n                                    onClick={logoutHandler}\r\n                                >\r\n                                    Logout\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n                    \r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n            <footer className=\"py-1\">\r\n                <p className=\"text-center mt-1\">\r\n                    Shopping Cart - 2000-2021, All Rights Reserved\r\n                </p>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst MetaData = ({ title }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - shopIT`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img className=\"card-img-top mx-auto\" src={product.images[0].url} alt={product.name} />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100 }%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>               \r\n    )\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react'\r\n\r\nconst Loader = () => <div className=\"loader\"></div>;\r\n\r\nexport default Loader;","export const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST';\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS';\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCTS_BRIEF_REQUEST = 'PRODUCTS_BRIEF_REQUEST';\r\nexport const PRODUCTS_BRIEF_SUCCESS = 'PRODUCTS_BRIEF_SUCCESS';\r\nexport const PRODUCTS_BRIEF_FAIL = 'PRODUCTS_BRIEF_FAIL';\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST';\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS';\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET';\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL';\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST';\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS';\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET';\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST';\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET';\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL';\r\n\r\nexport const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST';\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS';\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL';\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST';\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS';\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET';\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL';\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST';\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS';\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL';\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST';\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS';\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET';\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from 'axios';\r\n\r\nimport { \r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCTS_BRIEF_REQUEST,\r\n    PRODUCTS_BRIEF_SUCCESS,\r\n    PRODUCTS_BRIEF_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/productConstants';\r\n\r\nexport const getProducts = (\r\n    keyword = '', \r\n    currentPage = 1, \r\n    price, \r\n    category, \r\n    rating = 0\r\n) => async dispatch => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\r\n        }\r\n        const { data } = await axios.get(link);\r\n\r\n        dispatch({ type: ALL_PRODUCTS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProductDetails = id => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    \r\n        const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data.product });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProductBrief = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: PRODUCTS_BRIEF_REQUEST });\r\n        const { data } = await axios.get(`/api/v1/products/brief`);\r\n\r\n        dispatch({ type: PRODUCTS_BRIEF_SUCCESS, payload: data.brief });\r\n\r\n    } catch (error) {\r\n         dispatch({\r\n            type: PRODUCTS_BRIEF_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAdminProducts = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST });\r\n    \r\n        const { data } = await axios.get('/api/v1/admin/products');\r\n\r\n        dispatch({ \r\n            type: ADMIN_PRODUCTS_SUCCESS, \r\n            payload: data.products \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const newProduct = productData => async dispatch => {\r\n    try {\r\n        dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config);\r\n\r\n        dispatch({ \r\n            type: NEW_PRODUCT_SUCCESS, \r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = productId => async dispatch => {\r\n    try {\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n    \r\n        const { data } = await axios.delete(`/api/v1/admin/product/${productId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (productId, productData) => async dispatch => {\r\n    try {\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n   \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const { data } = await axios.put(`/api/v1/admin/product/${productId}`, productData, config);\r\n\r\n        dispatch({ \r\n            type: UPDATE_PRODUCT_SUCCESS, \r\n            payload: data.success\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const newReview = reviewData => async dispatch => {\r\n    try {\r\n        dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config);\r\n\r\n        dispatch({ \r\n            type: NEW_REVIEW_SUCCESS, \r\n            payload: data.success\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get product reviews\r\nexport const getProductReviews = productId => async dispatch => {\r\n    try {\r\n        dispatch({ type: GET_REVIEWS_REQUEST });\r\n    \r\n        const { data } = await axios.get(`/api/v1/reviews?id=${productId}`);\r\n\r\n        dispatch({ \r\n            type: GET_REVIEWS_SUCCESS, \r\n            payload: data.reviews \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async dispatch => {\r\n    try {\r\n        dispatch({ type: DELETE_REVIEW_REQUEST });\r\n    \r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\r\n\r\n        dispatch({ \r\n            type: DELETE_REVIEW_SUCCESS, \r\n            payload: data.success \r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n}","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useAlert } from 'react-alert';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from './layout/MetaData';\r\nimport Product from './product/Product';\r\nimport Loader from './layout/Loader';\r\nimport { getProducts } from '../actions/productActions';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst Home = ({ match }) => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        loading, \r\n        products, \r\n        error, \r\n        productsCount, \r\n        resPerPage, \r\n        filteredProductsCount\r\n    } = useSelector(state => state.products);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [price, setPrice] = useState([1, 1000]);\r\n    const [category, setCategory] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        'Books',\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ];\r\n\r\n    const keyword = match.params.keyword;\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error);\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n    }, [dispatch, alert, error, keyword, price, category, currentPage, rating]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount;\r\n    }\r\n \r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Buy Best Products Online'}/>\r\n                    <h1 id=\"products_heading\">For Demostration Purpose...</h1>\r\n\r\n                    <section id=\"products\" className=\"container mt-5\">\r\n                        <div className=\"row\">\r\n                            {keyword ? (\r\n                                <Fragment>\r\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                        <div className=\"px-5\">\r\n                                            <Range\r\n                                                marks={{\r\n                                                    1: `$1`,\r\n                                                    1000: `$1000`\r\n                                                }}\r\n                                                min={1}\r\n                                                max={1000}\r\n                                                defaultValue={[1, 1000]}\r\n                                                tipFormatter={value => `$${value}`}\r\n                                                tipProps={{\r\n                                                    placement: \"top\",\r\n                                                    visible: true\r\n                                                }}\r\n                                                value={price}\r\n                                                onChange={price => setPrice(price)}\r\n                                            />\r\n\r\n                                            <hr className=\"my-5\" />\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Categories\r\n                                                </h4>\r\n                                                <ul className=\"pl-0\">\r\n                                                    {categories.map(category => (\r\n                                                        <li \r\n                                                            style={{ cursor: 'pointer', listStyleType: 'none' }}\r\n                                                            key={category}\r\n                                                            onClick={setCategory.bind(null, category)}\r\n                                                        >\r\n                                                            {category}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                            <hr className=\"my-5\" />\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Ratings\r\n                                                </h4>\r\n                                                <ul className=\"pl-0\">\r\n                                                    {[5, 4, 3, 2, 1].map(star => (\r\n                                                        <li \r\n                                                            style={{ cursor: 'pointer', listStyleType: 'none' }}\r\n                                                            key={star}\r\n                                                            onClick={setRating.bind(null, star)}\r\n                                                        >\r\n                                                            <div className=\"rating-outer\">\r\n                                                                <div \r\n                                                                    className=\"rating-inner\"\r\n                                                                    style={{\r\n                                                                        width: `${star * 20}%`\r\n                                                                    }}\r\n                                                                ></div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-9\">\r\n                                        <div className=\"row\">\r\n                                            {products && products.map(product => (\r\n                                                <Product key={product._id} product={product} col={4} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                products && products.map(product => (\r\n                                    <Product key={product._id} product={product} col={3} />\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination \r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Fragment } from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <Fragment class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div \r\n                            class=\"rating-inner\"\r\n                            style={{ width: `${(review.rating / 5) * 100}%`}}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ListReviews;\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART';\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO';\r\n\r\nexport const EMPTY_CART = 'EMPTY_CART';","import axios from 'axios';\r\n\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO, EMPTY_CART } from '../constants/cartConstants';\r\n\r\nexport const addItemToCart = (id, quantity, userId) => async (dispatch, getState) => {\r\n    const { data } =  await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({ \r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity,\r\n            userId\r\n        } \r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItemFromCart = id => async (dispatch, getState) => {\r\n    \r\n    dispatch({ \r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingInfo = data => async dispatch => {\r\n    dispatch({ \r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data));\r\n};\r\n\r\nexport const emptyCart = userId => async dispatch => {\r\n    dispatch({\r\n        type: EMPTY_CART,\r\n        payload: userId\r\n    });            \r\n};","import React, { useEffect, Fragment, useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport ListReviews from '../review/ListReviews';\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions';\r\nimport { addItemToCart } from '../../actions/cartActions';\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants';\r\n\r\nconst ProductDetails = ({ match, history }) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails);\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error: reviewError, success } = useSelector(state => state.newReview);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success]);\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity, user._id));\r\n        history.push('/cart');\r\n        alert.success('Item Added to Cart');\r\n    };\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count');\r\n\r\n        if (count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty);\r\n    };\r\n\r\n    const decreaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n    };\r\n\r\n    function setUserRatings () {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            });\r\n        });\r\n\r\n        function showRatings (e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue);\r\n                    } else {\r\n                        star.classList.remove('orange');\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow');\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment className=\"container container-fluid\">\r\n                     <MetaData title={product.name}/>\r\n                    <div className=\"row f-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100 }%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews\r\n                                } Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">${product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>\r\n                                    -\r\n                                </span>\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>\r\n                                    +\r\n                                </span>\r\n                            </div>\r\n                            <button \r\n                                type=\"button\" \r\n                                id=\"cart_btn\" \r\n                                className=\"btn btn-primary d-inline ml-4\"\r\n                                disabled={product.stock === 0}\r\n                                onClick={addToCart}\r\n                            >\r\n                                Add to Cart\r\n                            </button>\r\n\r\n                            <hr />\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'}>\r\n                                {product.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                            </span></p>\r\n\r\n                            <hr />\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? (\r\n                                <button \r\n                                    id=\"review_btn\" \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary mt-4\" \r\n                                    data-toggle=\"modal\" \r\n                                    data-target=\"#ratingModal\"\r\n                                    onClick={setUserRatings}\r\n                                >\r\n                                        Submit Your Review\r\n                                </button>\r\n                            ) : (\r\n                                <div className=\"alert alert-danger mt-5\">Login to post your review.</div>\r\n                            )}\r\n                            \r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea \r\n                                                        name=\"review\" \r\n                                                        id=\"review\" \r\n                                                        className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={e => setComment(e.target.value)}\r\n                                                    >\r\n                                                    </textarea>\r\n                                                    <button \r\n                                                        className=\"btn my-3 float-right review-btn px-4 text-white\" \r\n                                                        data-dismiss=\"modal\" \r\n                                                        aria-label=\"Close\"\r\n                                                        onClick={reviewHandler}\r\n                                                    >\r\n                                                        Submit\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductDetails;\r\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST';\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS';\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL';\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST';\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS';\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL';\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST';\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS';\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL';\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST';\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS';\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET';\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL';\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST';\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS';\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET';\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { \r\n    productsReducer, \r\n    productReducer, \r\n    productDetailsReducer, \r\n    newReviewReducer, \r\n    newProductReducer, \r\n    productReviewsReducer ,\r\n    reviewReducer,\r\n    productsBriefReducer,\r\n} from './reducers/productReducers';\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrderReducer, orderReducer } from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    product: productReducer,\r\n    productDetails: productDetailsReducer,\r\n    productsBrief: productsBriefReducer,\r\n    newProduct: newProductReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrderReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n});\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems') \r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import { \r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_RESET,\r\n    NEW_PRODUCT_FAIL,\r\n    PRODUCTS_BRIEF_REQUEST,\r\n    PRODUCTS_BRIEF_SUCCESS,\r\n    PRODUCTS_BRIEF_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/productConstants';\r\n\r\nexport const productsReducer = (state = { products:[]}, action) => {\r\n    switch(action.type) {\r\n        case ALL_PRODUCTS_REQUEST:\r\n        case ADMIN_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            };\r\n        case ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductsCount: action.payload.filteredProductsCount\r\n            };\r\n        case ADMIN_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            };\r\n        case ALL_PRODUCTS_FAIL:\r\n        case ADMIN_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            };\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            };\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            };\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const productsBriefReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCTS_BRIEF_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case PRODUCTS_BRIEF_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                productsBrief: action.payload\r\n            };\r\n        case PRODUCTS_BRIEF_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newProductReducer = (state = { product: {}, loading: false }, action) => {\r\n    switch (action.type) {\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            };\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            };\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewsReducer = (state = { reviews: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload\r\n            };\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            };\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL, \r\n    CLEAR_ERRORS,\r\n} from '../constants/userConstants';\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            };\r\n        case LOAD_USER_FAIL: \r\n            return {\r\n               loading: false,\r\n               isAuthenticated: false,\r\n               user: null,\r\n               error: action.payload \r\n            };\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            };\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            };\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            };\r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            };\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            };\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            };\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            };\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            };\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO, EMPTY_CART } from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            const item = action.payload;\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product);\r\n\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product \r\n                        ? item \r\n                        : i\r\n                    )\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case REMOVE_ITEM_CART: \r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            };\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            };\r\n        case EMPTY_CART:\r\n            const updateCartItems = state.cartItems.filter(item => item.userId !== action.payload);\r\n            localStorage.setItem('cartItems', JSON.stringify(updateCartItems));\r\n            return {\r\n                ...state,\r\n                cartItems: updateCartItems\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants';\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                oading: false,\r\n                order: action.payload\r\n            };\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport const myOrdersReducer = (state = { orders: []}, action) => {\r\n    switch (action.type) {\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            };\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            };\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const allOrderReducer = (state = { orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.orders,\r\n                totalAmount: action.payload.totalAmount\r\n            };\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            };\r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            };\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        case UPDATE_ORDER_RESET:\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { Fragment } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />;\r\n                        }\r\n\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to='/' />;\r\n                        } \r\n\r\n                        return <Component {...props} />;\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions';\r\n\r\nconst Cart = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    let { cartItems } = useSelector(state => state.cart);\r\n    const { user = {} } = useSelector(state => state.auth);\r\n\r\n    if (user) cartItems = cartItems.filter(item => item.userId === user._id);\r\n\r\n    const removeCartItemHandler = id => {\r\n        dispatch(removeItemFromCart(id));\r\n    };\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty, user._id));\r\n    };\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty, user._id));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 classNameName=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt={item.name} height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span \r\n                                                        className=\"btn btn-danger minus\" \r\n                                                        onClick={decreaseQty.bind(null, item.product, item.quantity)}\r\n                                                    >\r\n                                                        -\r\n                                                    </span>\r\n                                                    <input \r\n                                                        type=\"number\" \r\n                                                        className=\"form-control count d-inline\" \r\n                                                        value={item.quantity} readOnly />\r\n                                                    <span \r\n                                                        className=\"btn btn-primary plus\" \r\n                                                        onClick={increaseQty.bind(null, item.product, item.quantity, item.stock)}\r\n                                                    >\r\n                                                        +\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i \r\n                                                    id=\"delete_cart_item\" \r\n                                                    className=\"fa fa-trash btn btn-danger\"\r\n                                                    onClick={removeCartItemHandler.bind(null, item.product)}\r\n                                                ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr /> \r\n                                </Fragment>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">\r\n                                    {cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)}(Units)\r\n                                </span></p>\r\n                                <p>\r\n                                    Est. total: <span className=\"order-summary-values\">\r\n                                    ${cartItems.reduce((acc, item) => acc + Number(item.quantity) * item.price, 0).toFixed(2)}\r\n                                </span></p>\r\n                \r\n                                <hr />\r\n                                <button \r\n                                    id=\"checkout_btn\" \r\n                                    className=\"btn btn-primary btn-block\"\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Check out\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n            {shipping ? <Link to='shippping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { countries } from 'countries-list';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { saveShippingInfo } from '../../actions/cartActions';\r\n\r\nconst Shipping = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { shippingInfo } = useSelector(state => state.cart);\r\n    // { US: { name: 'United States', ...rest }}\r\n    const countriesList = Object.values(countries);\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address);\r\n    const [city, setCity] = useState(shippingInfo.city);\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode);\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\r\n    const [country, setCountry] = useState(shippingInfo.country);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(saveShippingInfo({ address, city, postalCode, phoneNo, country }));\r\n        history.push('/confirm');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"shipping\" />\r\n            <CheckoutSteps shipping />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={e => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={e => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={e => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={e => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={e => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Shipping;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport CheckoutSteps from './CheckoutSteps';\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    let { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { user } = useSelector(state => state.auth);\r\n\r\n    if (user) cartItems = cartItems.filter(item => item.userId === user._id);\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25;\r\n    const taxPrice = Number((0.085 * itemsPrice).toFixed(2));\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2);\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        };\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MetaData title=\"Confirm Order\" />\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}`}</p>\r\n                    \r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems && cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.name.replace(/\\s/g, '') + item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt={item.name.replace(/\\s/g, '') + item.product}height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                        <div id=\"order_summary\">\r\n                            <h4>Order Summary</h4>\r\n                            <hr />\r\n                            <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                            <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                            <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                            <hr />\r\n                            <button \r\n                                id=\"checkout_btn\" \r\n                                className=\"btn btn-primary btn-block\"\r\n                                onClick={processToPayment}\r\n                            >\r\n                                Proceed to Payment\r\n                            </button>\r\n                        </div>\r\n                    </div>   \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = order => async dispatch => {\r\n    try {\r\n        dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post('api/v1/order/new', order, config);\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get currently logged in user orders\r\nexport const myOrders = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me');\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get order details\r\nexport const getOrderDetails = id => async dispatch => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Get all orders (Admin)\r\nexport const allOrders = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`);\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// update order (Admin)\r\nexport const updateOrder = (orderId, orderData) => async dispatch => {\r\n    try {\r\n        dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${orderId}`, orderData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// delete order (Admin)\r\nexport const deleteOrder = orderId => async dispatch => {\r\n    try {\r\n        dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${orderId}`);\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n}","import React, { Fragment, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { createOrder, clearErrors } from '../../actions/orderActions';\r\nimport { emptyCart } from '../../actions/cartActions';\r\n\r\nimport axios from 'axios';\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n};\r\n\r\nconst Payment = ({ history }) => {\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error} = useSelector(state => state.newOrder);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n    }, [dispatch, alert, error]);\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    };\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    };\r\n\r\n    const submitHandler = async e => {\r\n        e.preventDefault();\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        if (!stripe || !elements) return;\r\n\r\n        let res;\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            \r\n            res = await axios.post('/api/v1/payment/process', paymentData, config);\r\n            const clientSecret = res.data.client_secret;\r\n            \r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n            } else {\r\n                // The payment is proceed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n                    \r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status,\r\n                    };\r\n\r\n                    dispatch(createOrder(order));\r\n                    dispatch(emptyCart(user._id));\r\n\r\n                    history.push('/success');\r\n                } else {\r\n                    alert.error('There is some issue while payment processing');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Payment\" />\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">\r\n                                Card Number\r\n                                <span className=\" ml-5 text-muted\" style={{ fontSize: \"14px\" }}>(Test: 4000 0027 6000 3184)</span>\r\n                            </label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n            \r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - $${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n            \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Payment;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../layout/MetaData';\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Order Success\" />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/order\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport { myOrders, clearErrors } from '../../actions/orderActions';\r\n\r\nconst ListOrders = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n    }, [dispatch, alert, error]);\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus.includes('Delivered'))\r\n                    ? <p style={{ color: 'green '}}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red '}}>{order.orderStatus}</p>,\r\n                actions: \r\n                    <Link  to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        });\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"My Orders\" />\r\n\r\n            <h1 className=\"mt-5\">My Orders</h1>\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable \r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ListOrders;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions';\r\n\r\n\r\nconst OrderDetails = ({ match }) => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails);\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order;\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id]);\r\n\r\n    const shippingDetails = shippingInfo && \r\n        `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\r\n    \r\n    const isPaid = paymentInfo && \r\n        paymentInfo.status === 'succeeded' ? true : false;\r\n    \r\n    const isDelievered = order.orderStatus && \r\n        String(order.orderStatus.includes('Delivered'));\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Order Details\" />\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n                            <h1 className=\"my-5\">{order._id}</h1>\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.PhoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr />\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"} >\r\n                                <b>{isPaid ? \"PAID\" : \"UNPAID\"}</b>\r\n                            </p>\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={isDelievered ? \"greenColor\" : \"redColor\"}>\r\n                                <b>{orderStatus}</b>\r\n                            </p>\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}   \r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default OrderDetails;\r\n","  \r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, redirect, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (!password || !email) return;\r\n\r\n        dispatch(login(email, password));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { register, clearErrors } from '../../actions/userActions';\r\n\r\nconst Register = ({ history }) => {\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push('/');\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, isAuthenticated, error, alert, history]);\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result);\r\n                    setAvatar(reader.result);\r\n                }\r\n            };\r\n\r\n            reader.readAsDataURL(e.target.files[0]);\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (!name || !email || !password) return;\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Register\" />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form \r\n                        className=\"shadow-lg\" \r\n                        encType='multipart/form-data'\r\n                        onSubmit={submitHandler}\r\n                    >\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n            \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                        <label htmlFor='avatar_upload'>Avatar</label>\r\n                        <div className='d-flex align-items-center'>\r\n                            <div>\r\n                                <figure className='avatar mr-3 item-rtl'>\r\n                                    <img\r\n                                        src={avatarPreview}\r\n                                        className='rounded-circle'\r\n                                        alt='avatar preview'\r\n                                    />\r\n                                </figure>\r\n                            </div>\r\n                            <div className='custom-file'>\r\n                                <input\r\n                                    type='file'\r\n                                    name='avatar'\r\n                                    className='custom-file-input'\r\n                                    id='customFile'\r\n                                    accept=\"images/*\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                <label className='custom-file-label' htmlFor='customFile'>\r\n                                    Choose Avatar\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={ loading ? true : false }\r\n                        >\r\n                        REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\n\r\nconst Profile = () => {\r\n    const { user, loading } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={\"Your Profile\"} />\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-3\">\r\n                            <figure className='avatar avatar-profile'>\r\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                            </figure>\r\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n                \r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n                \r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined on</h4>\r\n                            <p>{String(user.createdAt)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n                            \r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully!');\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me');\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, isUpdated, error, alert, user, history]);\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result);\r\n                setAvatar(reader.result);\r\n            }\r\n        };\r\n\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        if (!name || !email) return;\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form \r\n                        className=\"shadow-lg\" \r\n                        encType='multipart/form-data'\r\n                        onSubmit={submitHandler}\r\n                    >\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input \r\n\t\t\t\t\t\t\t\ttype=\"name\" \r\n\t\t\t\t\t\t\t\tid=\"name_field\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn update-btn btn-block mt-4 mb-3\"\r\n                            disabled={ loading ? true : false } \r\n                        >\r\n                            Update\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { updatePassword, clearErrors } from '../../actions/userActions';\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants';\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('password updated successfully!');\r\n\r\n            history.push('/me');\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, isUpdated, error, alert, history]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('newPassword', newPassword);\r\n\r\n        dispatch(updatePassword(formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={e => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={newPassword}\r\n                                onChange={e => setNewPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn update-btn btn-block mt-4 mb-3\"\r\n                            disabled={ loading ? true : false } \r\n                        >\r\n                            Update Password\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { forgotPassword, clearErrors } from '../../actions/userActions';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, message} = useSelector(state => state.forgotPassword);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message);\r\n        }\r\n\r\n    }, [dispatch, alert, error, message ]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n        dispatch(forgotPassword(formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Forgot Password\" />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={ loading ? true : false } \r\n                        >\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport { resetPassword, clearErrors } from '../../actions/userActions';\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Password updated successfully');\r\n            history.push('/login');\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history ]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"New Password Reset\" />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={e => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n         <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a \r\n                            href=\"#productSubmenu\" \r\n                            data-toggle=\"collapse\" \r\n                            aria-expanded=\"false\" \r\n                            className=\"dropdown-toggle\"\r\n                        >\r\n                            <i className=\"fa fa-product-hunt\"></i> Products\r\n                        </a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sidebar;","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nimport Loader from '../layout/Loader';\r\nimport { getAdminProducts } from '../../actions/productActions';\r\nimport { allOrders } from '../../actions/orderActions';\r\nimport { allUsers } from '../../actions/userActions';\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { products } = useSelector(state => state.products);\r\n    const { users } = useSelector(state => state.allUsers);\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders);\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n        dispatch(allOrders());\r\n        dispatch(allUsers());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Admin Dashboard\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n                            <MetaData title=\"Admin Dashboard\" />\r\n\r\n                             <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">\r\n                                                Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">\r\n                                                Products<br /> <b>{products && products.length}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">\r\n                                                Orders<br /> <b>{orders && orders.length}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">\r\n                                                Users<br /> <b>{users && users.length}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">\r\n                                                Out of Stock<br /> <b>{outOfStock}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n\r\n                   \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\nimport Sidebar from './Sidebar';\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions';\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants';\r\n\r\nconst ProductsList = ({ history }) => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products = [] } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, deleteError, history]);\r\n\r\n    const deleteProductHandler = id => {\r\n        dispatch(deleteProduct(id));\r\n    };\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: (\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        });\r\n\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductsList;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nimport { newProduct, clearErrors } from '../../actions/productActions';\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\r\n\r\nconst NewProduct = ({ history }) => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('Electronics');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        'Books',\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ];\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created ');\r\n            dispatch({ type: NEW_PRODUCT_RESET });\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history]);\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result]);\r\n                    setImages(oldArray => [...oldArray, reader.result]);\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        })\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image);\r\n        });\r\n\r\n        dispatch(newProduct(formData));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Create Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\"> \r\n                            <form className=\"shadow-lg\" encType='multipart/form-data' onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-4\">Create New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={e => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea \r\n                                        className=\"form-control\" \r\n                                        id=\"description_field\" \r\n                                        rows=\"8\" \r\n                                        value={description}\r\n                                        onChange={e => setDescription(e.target.value)}\r\n                                    ></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={e => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={e => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            multiple\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                        </label>\r\n                                    </div>\r\n                                    {imagesPreview.map(img => (\r\n                                        <img \r\n                                            src={img} \r\n                                            key={img} \r\n                                            alt=\"Images Preview\" \r\n                                            className=\"mt-3 mr-2\" \r\n                                            width=\"55\" \r\n                                            height=\"52\" \r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default NewProduct;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions';\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants';\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('Electronics');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([]);\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ];\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails);\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);;\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n        \r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n    }, [dispatch, alert, error, updateError, isUpdated, history, product, productId]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image);\r\n        });\r\n\r\n        dispatch(updateProduct(product._id, formData));\r\n    };\r\n\r\n    const onChange = e => {\r\n        const files = Array.from(e.target.files);\r\n\r\n        setImagesPreview([]);\r\n        setImages([]);\r\n        setOldImages([]);\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        });\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\"> \r\n                            <form className=\"shadow-lg\" encType='multipart/form-data' onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-4\">Create New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={e => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea \r\n                                        className=\"form-control\" \r\n                                        id=\"description_field\" \r\n                                        rows=\"8\" \r\n                                        value={description}\r\n                                        onChange={e => setDescription(e.target.value)}\r\n                                    ></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={e => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={e => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            multiple\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                        </label>\r\n                                    </div>\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img \r\n                                            key={img.url + img.name} \r\n                                            src={img.url} \r\n                                            alt={img.url} \r\n                                            className=\"mt-3 mr-2\" \r\n                                            width=\"55\" \r\n                                            height=\"52\" \r\n                                        />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img \r\n                                            src={img} \r\n                                            key={img} \r\n                                            alt=\"Images Preview\" \r\n                                            className=\"mt-3 mr-2\" \r\n                                            width=\"55\" \r\n                                            height=\"52\" \r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\nimport Sidebar from './Sidebar';\r\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions';\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants';\r\n\r\nconst OrdersList = ({ history }) => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders = [] } = useSelector(state => state.allOrders);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.order);\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, deleteError, history]);\r\n\r\n    const deleteOrderHandler = id => {\r\n        dispatch(deleteOrder(id));\r\n    };\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount  ',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: (\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                            <i className=\"fa fa-eye\"></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        });\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default OrdersList;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\nimport Sidebar from './Sidebar';\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions';\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants';\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n    const [status, setStatus] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails);\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus} = order;\r\n    const { error, isUpdated } = useSelector(state => state.order);\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(orderId));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, orderId]);\r\n\r\n    const updateOrderHandler = id => {\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData));\r\n    };\r\n\r\n    const shippingDetails = \r\n        shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`;\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false;\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${orderId}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n                                    <h1 className=\"my-5\">Order # {orderId}</h1>\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b> {shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"} >\r\n                                        <b>{isPaid ? \"PAID\" : \"UNPAID\"}</b>\r\n                                    </p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p className=\"greenColor\" >\r\n                                        <b>{paymentInfo && paymentInfo.id}</b>\r\n                                    </p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p \r\n                                        className={orderStatus && \r\n                                            String(orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} \r\n                                    >\r\n                                        <b>{orderStatus}</b>\r\n                                    </p>\r\n                                    \r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                                \r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={e => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProcessOrder;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\nimport Sidebar from './Sidebar';\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions';\r\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\r\n\r\nconst UsersList = ({ history }) => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n    }, [dispatch, history, alert, error, isDeleted]);\r\n\r\n    const deleteUserHandler = id => {\r\n        dispatch(deleteUser(id));\r\n    };\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'user ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions: (\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={deleteUserHandler.bind(null, user._id)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        });\r\n        return data;\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"All User\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions';\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants';\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const { user } = useSelector(state => state.userDetails);\r\n\r\n    const userId = match.params.id;\r\n    \r\n    useEffect(() => {\r\n        console.log(user && user._id !== userId);\r\n        if (user && user._id !== userId) { \r\n            dispatch(getUserDetails(userId));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role);\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully!');\r\n            history.push('/admin/users');\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n        \r\n\r\n    }, [dispatch, alert, error, history, isUpdated, userId, user]);\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData));\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Update User\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div class=\"row wrapper\">\r\n                        <div class=\"col-10 col-lg-5\">\r\n                            <form class=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 class=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input \r\n                                        type=\"name\" \r\n                                        id=\"name_field\" \r\n                                        class=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        class=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                            <label htmlFor=\"role_field\">Role</label>\r\n                                            <select\r\n                                                id=\"role_field\"\r\n                                                class=\"form-control\"\r\n                                                name='role'\r\n                                                value={role}\r\n                                                onChange={e => setRole(e.target.value)}\r\n                                            >\r\n                                                <option value=\"user\">user</option>\r\n                                                <option value=\"admin\">admin</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default UpdateUser;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Sidebar from './Sidebar';\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions';\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\r\n\r\nconst ProductReview = ({ history }) => {\r\n    const[productId, setProductId] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { productsBrief } = useSelector(state => state.productsBrief);\r\n    const { isDeleted } = useSelector(state => state.review);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId));\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }        \r\n    }, [dispatch, alert, history, error, isDeleted, productId]);\r\n\r\n    console.log(productsBrief);\r\n\r\n    const deleteReviewHandler = id => {\r\n        dispatch(deleteReview(id, productId));\r\n    };\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId));\r\n    };\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n                actions: (\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={deleteReviewHandler.bind(null, review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                )\r\n            });\r\n        });\r\n        return data;\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MetaData title=\"Product Reviews\" />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n\t\t\t                <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={e => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductReview;\r\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\n// Stripe Payment\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport Home from './components/Home';\nimport ProductDetails from './components/product/ProductDetails';\nimport { loadUser } from './actions/userActions';\nimport store from './store';\nimport ProtectedRoute from './components/route/ProtectedRoute';\n// Cart Imports\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport OrderSuccess from './components/cart/OrderSuccess';\n// Order Imports\nimport ListOrders from './components/order/ListOrders';\nimport OrderDetails from './components/order/OrderDetails';\n// Auth or User Imports\nimport Login from './components/user/Login';\nimport Register from './components/user/Register';\nimport Profile from './components/user/Profile';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard';\nimport ProductList from './components/admin/ProductList';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrdersList from './components/admin/OrdersList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReview from './components/admin/ProductReview';\n\nimport './App.css';\n\nfunction App() {\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth);\n\n  async function getStripeApiKey() {\n    const { data } = await axios.get('/api/v1/stripeapi');\n    setStripeApiKey(data.stripeApiKey);\n  };\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n    getStripeApiKey();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"container container-fluid\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" exact component={ProductDetails} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/password/forgot\" exact component={ForgotPassword} />\n          <Route path=\"/password/reset/:token\" exact component={NewPassword} />\n          <ProtectedRoute path=\"/cart\" exact component={Cart} />\n          <ProtectedRoute path=\"/shipping\" exact component={Shipping} />\n          {stripeApiKey && \n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" exact component={Payment} />\n            </Elements>\n          }\n          <ProtectedRoute path=\"/confirm\" exact component={ConfirmOrder} />\n          <ProtectedRoute path=\"/me\" exact component={Profile} />\n          <ProtectedRoute path=\"/success\" exact component={OrderSuccess} />\n          <ProtectedRoute path=\"/orders/me\" exact component={ListOrders} />\n          <ProtectedRoute path=\"/order/:id\" exact component={OrderDetails} />\n          <ProtectedRoute path=\"/me/update\" exact component={UpdateProfile} />\n          <ProtectedRoute path=\"/password/update\" exact component={UpdatePassword} />\n        </div>\n\n        <ProtectedRoute path=\"/dashboard\" exact isAdmin={true} component={Dashboard} />\n        <ProtectedRoute path=\"/admin/products\" exact isAdmin={true} component={ProductList} />\n        <ProtectedRoute path=\"/admin/product\" exact isAdmin={true} component={NewProduct} />\n        <ProtectedRoute path=\"/admin/product/:id\" exact isAdmin={true} component={UpdateProduct} />\n        <ProtectedRoute path=\"/admin/orders\" exact isAdmin={true} component={OrdersList} />\n        <ProtectedRoute path=\"/admin/order/:id\" exact isAdmin={true} component={ProcessOrder} />\n        <ProtectedRoute path=\"/admin/users\" exact isAdmin={true} component={UsersList} />\n        <ProtectedRoute path=\"/admin/user/:id\" exact isAdmin={true} component={UpdateUser} />\n        <ProtectedRoute path=\"/admin/reviews\" exact isAdmin={true} component={ProductReview} />\n        \n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n\nimport App from './App';\nimport store from './store';\n\nconst options = {\n  timeout: 5000,\n  position: positions.BOTTOM_CENTER,\n  transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n    </AlertProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}